{"version":3,"sources":["../../../src/components/Field/CheckboxGroup.js"],"names":["CheckboxGroup","onClickOption","clickedOption","props","input","value","onChange","options","option","label","meta","name","invalid","error","propTypes","object","isRequired","array","string"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA;;;IAGMA,a;;;;;;;;;;;;;;oMACJC,a,GAAgB,UAACC,aAAD,EAAmB;AAAA,8BACM,MAAKC,KADX,CACzBC,KADyB;AAAA,UAChBC,KADgB,qBAChBA,KADgB;AAAA,UACTC,QADS,qBACTA,QADS;;;AAGjCA,4BACK,uBAAU,iBAAI,MAAKH,KAAL,CAAWI,OAAf,EAAwB;AAAA,eAAU,CAACC,MAAD,EAAS,KAAT,CAAV;AAAA,OAAxB,CAAV,CADL,EAEMH,SAAS,EAFf,sBAGQH,aAHR,EAGwB,CAACG,MAAMH,aAAN,CAHzB;AAKD,K;;;;;6BAEQ;AAAA,mBACyC,KAAKC,KAD9C;AAAA,UACCM,KADD,UACCA,KADD;AAAA,UACQC,IADR,UACQA,IADR;AAAA,gCACcN,KADd;AAAA,UACuBO,IADvB,gBACuBA,IADvB;AAAA,UAC6BN,KAD7B,gBAC6BA,KAD7B;;;AAGP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAMI;AAAN,SADF;AAEE;AACE,gBAAME,IADR;AAEE,mBAASN,SAAS,uBAAU,iBAAI,KAAKF,KAAL,CAAWI,OAAf,EAAwB;AAAA,mBAAU,CAACC,MAAD,EAAS,KAAT,CAAV;AAAA,WAAxB,CAAV,CAFpB;AAGE,yBAAe,KAAKP;AAHtB,UAFF;AAOGS,aAAKE,OAAL,IACC;AAAA;AAAA;AAAMF,eAAKG;AAAX;AARJ,OADF;AAYD;;;;;;AAGHb,cAAcc,SAAd,GAA0B;AACxBV,SAAO,oBAAUW,MAAV,CAAiBC,UADA;AAExBT,WAAS,oBAAUU,KAAV,CAAgBD,UAFD;AAGxBP,SAAO,oBAAUS,MAAV,CAAiBF,UAHA;AAIxBN,QAAM,oBAAUK,MAAV,CAAiBC;AAJC,CAA1B;;kBAOehB,a","file":"CheckboxGroup.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fromPairs, map } from 'lodash';\nimport Checkboxes from './Checkboxes';\n\n/**\n  * A checkbox list that sets thes field value to a key/value object of boolean properties\n  */\nclass CheckboxGroup extends Component {\n  onClickOption = (clickedOption) => {\n    const { input: { value, onChange } } = this.props;\n\n    onChange({\n      ...fromPairs(map(this.props.options, option => [option, false])),\n      ...(value || {}),\n      ...{ [clickedOption]: !value[clickedOption] },\n    });\n  }\n\n  render() {\n    const { label, meta, input: { name, value } } = this.props;\n\n    return (\n      <div>\n        <div>{label}</div>\n        <Checkboxes\n          name={name}\n          options={value || fromPairs(map(this.props.options, option => [option, false]))}\n          onClickOption={this.onClickOption}\n        />\n        {meta.invalid &&\n          <div>{meta.error}</div>}\n      </div>\n    );\n  }\n}\n\nCheckboxGroup.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n};\n\nexport default CheckboxGroup;\n"]}